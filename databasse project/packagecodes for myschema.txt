CREATE OR REPLACE PACKAGE user_management_pkg AS
    -- Kullanıcı Ekleme (INSERT)
    PROCEDURE insert_user(
        p_user_id       IN NUMBER,
        p_username      IN VARCHAR2,
        p_email         IN VARCHAR2,
        p_password_hash IN VARCHAR2,
        p_profile_pic   IN VARCHAR2,
        p_is_admin      IN NUMBER
    );

    -- Kullanıcı Güncelleme (UPDATE)
    PROCEDURE update_user(
        p_user_id       IN NUMBER,
        p_username      IN VARCHAR2,
        p_email         IN VARCHAR2,
        p_password_hash IN VARCHAR2,
        p_profile_pic   IN VARCHAR2,
        p_is_admin      IN NUMBER
    );

    -- Kullanıcı Silme (DELETE)
    PROCEDURE delete_user(
        p_user_id IN NUMBER
    );
END user_management_pkg;
/


CREATE OR REPLACE PACKAGE BODY user_management_pkg AS

    -- Kullanıcı Ekleme (INSERT)
    PROCEDURE insert_user(
        p_user_id       IN NUMBER,
        p_username      IN VARCHAR2,
        p_email         IN VARCHAR2,
        p_password_hash IN VARCHAR2,
        p_profile_pic   IN VARCHAR2,
        p_is_admin      IN NUMBER
    )
    AS
    BEGIN
        INSERT INTO my_schema.USERS (
            USER_ID, 
            USERNAME, 
            EMAIL, 
            PASSWORD_HASH, 
            PROFILE_PICTURE, 
            CREATED_AT, 
            IS_ADMIN
        ) VALUES (
            p_user_id, 
            p_username, 
            p_email, 
            p_password_hash, 
            p_profile_pic, 
            SYSTIMESTAMP, 
            p_is_admin
        );

        DBMS_OUTPUT.PUT_LINE('Kullanıcı başarıyla eklendi: ' || p_username);
    END insert_user;

    -- Kullanıcı Güncelleme (UPDATE)
    PROCEDURE update_user(
        p_user_id       IN NUMBER,
        p_username      IN VARCHAR2,
        p_email         IN VARCHAR2,
        p_password_hash IN VARCHAR2,
        p_profile_pic   IN VARCHAR2,
        p_is_admin      IN NUMBER
    )
    AS
    BEGIN
        UPDATE my_schema.USERS
        SET 
            USERNAME = p_username,
            EMAIL = p_email,
            PASSWORD_HASH = p_password_hash,
            PROFILE_PICTURE = p_profile_pic,
            IS_ADMIN = p_is_admin
        WHERE USER_ID = p_user_id;

        IF SQL%ROWCOUNT > 0 THEN
            DBMS_OUTPUT.PUT_LINE('Kullanıcı bilgileri başarıyla güncellendi: ' || p_username);
        ELSE
            DBMS_OUTPUT.PUT_LINE('Kullanıcı bulunamadı: ' || p_user_id);
        END IF;
    END update_user;

    -- Kullanıcı Silme (DELETE)
    PROCEDURE delete_user(
        p_user_id IN NUMBER
    )
    AS
    BEGIN
        DELETE FROM my_schema.USERS
        WHERE USER_ID = p_user_id;

        IF SQL%ROWCOUNT > 0 THEN
            DBMS_OUTPUT.PUT_LINE('Kullanıcı başarıyla silindi: ' || p_user_id);
        ELSE
            DBMS_OUTPUT.PUT_LINE('Kullanıcı bulunamadı: ' || p_user_id);
        END IF;
    END delete_user;

END user_management_pkg;
/
